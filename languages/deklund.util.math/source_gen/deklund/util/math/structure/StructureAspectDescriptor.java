package deklund.util.math.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptMathConcept = createDescriptorForMathConcept();
  /*package*/ final ConceptDescriptor myConceptMathSandbox = createDescriptorForMathSandbox();
  /*package*/ final ConceptDescriptor myConceptProduct = createDescriptorForProduct();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptMathConcept, myConceptMathSandbox, myConceptProduct);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.MathConcept:
        return myConceptMathConcept;
      case LanguageConceptSwitch.MathSandbox:
        return myConceptMathSandbox;
      case LanguageConceptSwitch.Product:
        return myConceptProduct;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForMathConcept() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("deklund.util.math", "MathConcept", 0x3c4bdd14b1b5479fL, 0xaea48829c0512a3bL, 0xe8f345509c8a9f1L);
    b.class_(false, true, false);
    b.origin("r:f748be68-59cd-4273-901f-64eec25587b1(deklund.util.math.structure)/1049114778041625073");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMathSandbox() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("deklund.util.math", "MathSandbox", 0x3c4bdd14b1b5479fL, 0xaea48829c0512a3bL, 0xe8f345509c90469L);
    b.class_(false, false, true);
    b.origin("r:f748be68-59cd-4273-901f-64eec25587b1(deklund.util.math.structure)/1049114778041648233");
    b.version(2);
    b.aggregate("concepts", 0xe8f345509c9046cL).target(0x3c4bdd14b1b5479fL, 0xaea48829c0512a3bL, 0xe8f345509c8a9f1L).optional(true).ordered(true).multiple(true).origin("1049114778041648236").done();
    b.alias("math_sandbox");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProduct() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("deklund.util.math", "Product", 0x3c4bdd14b1b5479fL, 0xaea48829c0512a3bL, 0xe8f345509c8a9d5L);
    b.class_(false, false, false);
    b.origin("r:f748be68-59cd-4273-901f-64eec25587b1(deklund.util.math.structure)/1049114778041625045");
    b.version(2);
    return b.create();
  }
}
